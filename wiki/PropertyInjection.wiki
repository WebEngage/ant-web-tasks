#summary Attributes and samples on how to use the Injector inside PowerWAR
#labels Featured

Basic concepts related to property injection are explained [http://code.google.com/p/ant-web-tasks/wiki/PowerWar#What_is_property_injection? here]. 

== Attributes and Nested Elements ==
<table cellspacing="0" cellpadding="10" border="1" width="800">
 <tr>
  <td width="100" valign="top" align="left"><b>Attribute/ Nested Element</b></td>
  <td width="500" valign="top" align="left"><b>Description</b></td>
  <td width="200" valign="top" align="left"><b>Remarks</b></td>
 </tr>
 <tr>
  <td width="100" valign="top" align="left">{{{fileset}}}</td>
  <td width="500" valign="top" align="left">{{{<fileset>}}} is a nested inner element for {{{inject}}} inside the {{{powerWar}}} task. Using this, you can specify group of files to which injection should be applied. {{{<fileset>}}} is a core Ant data-type. Find more details on using fileset here - http://ant.apache.org/manual/CoreTypes/fileset.html
<br/><br/>Here's an example of applying injection to all ".xml" and ".properties" file inside the "web" directory minus the "web.xml" file.
{{{
<inject verbose="on">
  <fileset dir="web">
    <include name="**/*.xml"/>
    <include name="**/*.properties"/>
    <exclude name="**/web.xml" />
  </fileset>
</inject>
}}}
 </td>
  <td valign="top" align="left">Default: {{{none}}}, applies the inject directive to all the files in project's base directory being added to web archive.
<br/><br/>
Note: You can specify multiple {{{<fileset>}}} based selectors for a single {{{inject}}} element.
  </td>
 </tr>
 <tr>
  <td width="100" valign="top" align="left">{{{patternPrefix}}}</td>
  <td width="500" valign="top" align="left">The injector replaces all ${BUILD.PROPERTY.NAME} style properties by default. However, you may choose to have different patterns for these property names in your files.
<br/><br/>
For example, if you may choose to keep the tokens in your file like this -
{{{
<bean id="foo">
  <property name="dbHost">
    <value>@__MYSQL.HOST__@</value>
  </property>
</bean>
}}}
In this case, your {{{patternPrefix}}} attribute should be specified as "{{{@__}}}"</td>
 <td width="200" valign="top" align="left">Default: ${</td>
</tr>
 <tr>
  <td width="100" valign="top" align="left">{{{patternSuffix}}}</td>
  <td width="500" valign="top" align="left">Look for the description above. In the sample provided, {{{patternSuffix}}} should be specified as "{{{__@}}}"</td>
 <td width="200" valign="top" align="left">Default: }</td>
</tr>
<tr>
  <td width="100" valign="top" align="left">{{{injectionPropertyFile}}}</td>
  <td width="500" valign="top" align="left">The injector, by default, replaces all the properties which can be resolved via Ant's property map. Ant prepares a global list of all properties including System properties, properties declared by you during the build process and properties read from your build property files (imported using {{{<property file="/my/build/file.properties"/>}}}). The good news is that you can use any of these in your files. 
<br/><br/>However, if this is not desired, and you wish to have a very separate and distinct list of properties to use, put them in a java properties files (key/value pairs) and pass the file name in this attribute.</td>
 <td width="200" valign="top" align="left">Default: none<br/><br/>If a specified file is not found (or could not be read), a {{{BuildException}}} is thrown.</td>
</tr>
<tr>
  <td width="100" valign="top" align="left">{{{modifyOriginal}}}</td>
  <td width="500" valign="top" align="left">Boolean attribute. If set to true will modify the original file.</td>
 <td width="200" valign="top" align="left">Default: {{{false}}}</td>
</tr>
<tr>
  <td width="100" valign="top" align="left">{{{verbose}}}</td>
  <td width="500" valign="top" align="left">Boolean attribute. If set to true spits out detailed information generated by the injector.</td>
 <td width="200" valign="top" align="left">Default: {{{true}}}</td>
</tr>
</table>